package com.example.pp.config;


import com.example.pp.entity.BusRoute;
import com.example.pp.entity.BusStop;
import com.example.pp.entity.BusTimetable;
import com.example.pp.entity.RouteSequence;
import com.example.pp.repository.BusRouteRepository;
import com.example.pp.repository.BusStopRepository;
import com.example.pp.repository.BusTimetableRepository;
import com.example.pp.repository.RouteSequenceRepository;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

@Component
@RequiredArgsConstructor
public class DataInitializer implements CommandLineRunner {

    private static final Logger log = LoggerFactory.getLogger(DataInitializer.class);

    private final BusRouteRepository busRouteRepository;
    private final BusStopRepository busStopRepository;
    private final RouteSequenceRepository routeSequenceRepository;
    private final BusTimetableRepository busTimetableRepository;

    @Override
    @Transactional
    public void run(String... args) throws Exception {
        if (busStopRepository.count() > 0) {
            log.info("버스 데이터가 이미 존재하므로 데이터 초기화를 건너뜁니다.");
            return; // 데이터가 있으면 메서드를 즉시 종료
        }

        // --- 1. 버스 정류장(BusStop) 데이터 저장 ---
        List<BusStop> busStops = Arrays.asList(
                new BusStop(16498, "생태공원", 37.58343, 126.8185),
                new BusStop(16503, "서광아파트", 37.57883, 126.8194),
                new BusStop(16507, "정곡초교", 37.57616, 126.8186),
                new BusStop(16512, "방화4단지", 37.57675, 126.8134),
                new BusStop(16517, "방화3동주민센터", 37.57818, 126.8139),
                new BusStop(16131, "방화역3번출구", 37.57691, 126.8124),
                new BusStop(16540, "한서고등학교.보람아파트", 37.57487, 126.8115),
                new BusStop(16545, "방신전통시장앞", 37.57334, 126.8126),
                new BusStop(16592, "방화동동부센트레빌아파트", 37.57337, 126.8138),
                new BusStop(16595, "프라임마트", 37.57287, 126.8182),
                new BusStop(16641, "마곡우림필유아파트", 37.57205, 126.8203),
                new BusStop(16601, "마곡한솔솔파크", 37.57004, 126.8227),
                new BusStop(16603, "길훈아파트", 37.56868, 126.8226),
                new BusStop(16604, "마곡중학교", 37.56896, 126.8206),
                new BusStop(16615, "마곡엠밸리1단지", 37.56781, 126.8192),
                new BusStop(16616, "마곡나루역1번출구", 37.56669, 126.8258),
                new BusStop(16617, "마곡나루역5번출구", 37.56531, 126.8275),
                new BusStop(16626, "마곡역", 37.56121, 126.8268),
                new BusStop(16621, "마곡역2번출구", 37.55996, 126.8260),
                new BusStop(16622, "강서세무서.공항초교", 37.56191, 126.8209),
                new BusStop(16623, "강서세무서", 37.56236, 126.8214),
                new BusStop(16624, "마곡엠밸리7단지입구", 37.56517, 126.8247),
                new BusStop(16625, "마곡엠밸리7단지", 37.56717, 126.8236),
                new BusStop(16627, "마곡엠밸리3단지입구", 37.56745676, 126.8199974),
                new BusStop(16628, "마곡중학교후문", 37.56863731, 126.8208225),
                new BusStop(16629, "길훈아파트", 37.56883291, 126.8227), // ID가 16603과 다름
                new BusStop(16630, "마곡한솔솔파크", 37.56967326, 126.8228444),
                new BusStop(16640, "마곡우림필유아파트", 37.57201904, 126.8206648),
                new BusStop(16631, "프라임마트", 37.57298634, 126.8181869),
                new BusStop(16632, "방화동동부센트레빌아파트", 37.57352361, 126.8142022),
                new BusStop(16633, "방신전통시장앞", 37.5736123, 126.8129196),
                new BusStop(16634, "한서고등학교.보람아파트", 37.57501249, 126.8117492),
                new BusStop(16130, "방화역2번출구", 37.5767421, 126.8126273),
                new BusStop(16955, "방화3동주민센터", 37.57838631, 126.8136548),
                new BusStop(16957, "방화동삼익아파트", 37.57680692, 126.8132285),
                new BusStop(16527, "정곡초교", 37.57584687, 126.8195724),
                new BusStop(16961, "서광아파트", 37.57883265, 126.8196509),
                new BusStop(16962, "생태공원", 37.58348242, 126.8185765)
        );
        busStopRepository.saveAll(busStops);

        // --- 2. 버스 노선(BusRoute) 데이터 저장 ---
        BusRoute routeDown = new BusRoute("GS05_DOWN", "강서05", "생태공원", "마곡역");
        BusRoute routeUp = new BusRoute("GS05_UP", "강서05", "마곡역", "생태공원");
        busRouteRepository.saveAll(Arrays.asList(routeDown, routeUp));

        // --- 3. 노선 순서(RouteSequence) 데이터 저장 ---
        // DB에 저장된 정류장 정보를 Map으로 변환하여 쉽게 참조
        Map<Integer, BusStop> savedStops = busStopRepository.findAll().stream()
                .collect(Collectors.toMap(BusStop::getStationNo, stop -> stop));

        // 하행 노선 순서
        List<RouteSequence> routeSequences = new ArrayList<>();
        int[][] sequenceDownData = {
                {1, 16498}, {2, 16503}, {3, 16507}, {4, 16512}, {5, 16517},
                {6, 16131}, {7, 16540}, {8, 16545}, {9, 16592}, {10, 16595},
                {11, 16641}, {12, 16601}, {13, 16603}, {14, 16604}, {15, 16615},
                {16, 16616}, {17, 16617}, {18, 16626}, {19, 16621}
        };
        for (int[] seq : sequenceDownData) {
            routeSequences.add(new RouteSequence(routeDown, savedStops.get(seq[1]), seq[0]));
        }

        // 상행 노선 순서
        int[][] sequenceUpData = {
                {1, 16621}, {2, 16622}, {3, 16623}, {4, 16624}, {5, 16625},
                {6, 16627}, {7, 16628}, {8, 16629}, {9, 16630}, {10, 16640},
                {11, 16631}, {12, 16632}, {13, 16633}, {14, 16634}, {15, 16130},
                {16, 16955}, {17, 16957}, {18, 16527}, {19, 16961}, {20, 16962},
                {21, 16498} // 마지막 생태공원 정류장
        };
        for (int[] seq : sequenceUpData) {
            routeSequences.add(new RouteSequence(routeUp, savedStops.get(seq[1]), seq[0]));
        }
        routeSequenceRepository.saveAll(routeSequences);


        // --- 4. 버스 시간표(BusTimetable) 데이터 저장 (하행선 기준) ---
        List<BusTimetable> busTimetables = new ArrayList<>();
        // H:mm 형식의 시간을 파싱하기 위한 포매터
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("H:mm");

        String[] timetableRawData = {
                "16498 5:30", "16498 6:00", "16498 6:30", "16498 7:00", "16498 7:30", "16498 8:00", "16498 8:40", "16498 9:10", "16498 9:50",
                "16503 5:31", "16503 6:01", "16503 6:31", "16503 7:01", "16503 7:31", "16503 8:01", "16503 8:41", "16503 9:11", "16503 9:51",
                "16507 5:33", "16507 6:02", "16507 6:31", "16507 7:01", "16507 7:31", "16507 8:01", "16507 8:41", "16507 9:11", "16507 9:51",
                "16512 5:35", "16512 6:07", "16512 6:37", "16512 7:07", "16512 7:37", "16512 8:09", "16512 8:47", "16512 9:17", "16512 9:57",
                "16517 5:36", "16517 6:08", "16517 6:40", "16517 7:12", "16517 7:42", "16517 8:14", "16517 8:52", "16517 9:22", "16517 10:00",
                "16131 5:37", "16131 6:09", "16131 6:41", "16131 7:13", "16131 7:43", "16131 8:15", "16131 8:53", "16131 9:23", "16131 10:01",
                "16540 5:38", "16540 6:10", "16540 6:42", "16540 7:14", "16540 7:44", "16540 8:16", "16540 8:54", "16540 9:24", "16540 10:02",
                "16545 5:39", "16545 6:13", "16545 6:43", "16545 7:17", "16545 7:47", "16545 8:21", "16545 8:59", "16545 9:29", "16545 10:07",
                "16592 5:39", "16592 6:13", "16592 6:43", "16592 7:17", "16592 7:47", "16592 8:21", "16592 8:59", "16592 9:29", "16592 10:07",
                "16595 5:41", "16595 6:14", "16595 6:44", "16595 7:17", "16595 7:47", "16595 8:21", "16595 8:59", "16595 9:29", "16595 10:07",
                "16641 5:41", "16641 6:16", "16641 6:46", "16641 7:21", "16641 7:51", "16641 8:26", "16641 9:04", "16641 9:34", "16641 10:12",
                "16601 5:42", "16601 6:16", "16601 6:46", "16601 7:21", "16601 7:51", "16601 8:26", "16601 9:04", "16601 9:34", "16601 10:12",
                "16603 5:43", "16603 6:16", "16603 6:46", "16603 7:21", "16603 7:51", "16603 8:26", "16603 9:04", "16603 9:34", "16603 10:12",
                "16604 5:43", "16604 6:17", "16604 6:47", "16604 7:22", "16604 7:52", "16604 8:27", "16604 9:05", "16604 9:35", "16604 10:13",
                "16615 5:44", "16615 6:17", "16615 6:47", "16615 7:22", "16615 7:52", "16615 8:27", "16615 9:05", "16615 9:35", "16615 10:13",
                "16616 5:46", "16616 6:20", "16616 6:50", "16616 7:24", "16616 7:54", "16616 8:29", "16616 9:07", "16616 9:37", "16616 10:15",
                "16617 5:46", "16617 6:21", "16617 6:51", "16617 7:26", "16617 7:56", "16617 8:31", "16617 9:09", "16617 9:39", "16617 10:17",
                "16626 5:47", "16626 6:22", "16626 6:52", "16626 7:27", "16626 7:57", "16626 8:32", "16626 9:10", "16626 9:40", "16626 10:18",
                "16621 5:48", "16621 6:23", "16621 6:53", "16621 7:28", "16621 7:58", "16621 8:33", "16621 9:11", "16621 9:41", "16621 10:19",
                "16498 10:20", "16498 10:50", "16498 11:20", "16498 11:50", "16498 12:20", "16498 12:50", "16498 13:20", "16498 13:55", "16498 14:25",
                "16503 10:21", "16503 10:51", "16503 11:21", "16503 11:51", "16503 12:21", "16503 12:51", "16503 13:21", "16503 14:01", "16503 14:31",
                "16507 10:21", "16507 10:51", "16507 11:21", "16507 11:51", "16507 12:21", "16507 12:51", "16507 13:21", "16507 14:01", "16507 14:31",
                "16512 10:29", "16512 10:55", "16512 11:27", "16512 11:57", "16512 12:29", "16512 13:01", "16512 13:33", "16512 14:08", "16512 14:38",
                "16517 10:30", "16517 10:56", "16517 11:28", "16517 11:58", "16517 12:30", "16517 13:02", "16517 13:34", "16517 14:09", "16517 14:39",
                "16131 10:31", "16131 10:57", "16131 11:29", "16131 11:59", "16131 12:31", "16131 13:03", "16131 13:35", "16131 14:10", "16131 14:40",
                "16540 10:32", "16540 10:58", "16540 11:30", "16540 12:00", "16540 12:32", "16540 13:04", "16540 13:36", "16540 14:11", "16540 14:43",
                "16545 10:37", "16545 11:03", "16545 11:33", "16545 12:03", "16545 12:36", "16545 13:06", "16545 13:36", "16545 14:11", "16545 14:41",
                "16592 10:37", "16592 11:03", "16592 11:33", "16592 12:03", "16592 12:36", "16592 13:06", "16592 13:36", "16592 14:11", "16592 14:41",
                "16595 10:37", "16595 11:03", "16595 11:33", "16595 12:03", "16595 12:36", "16595 13:06", "16595 13:36", "16595 14:11", "16595 14:41",
                "16641 10:42", "16641 11:08", "16641 11:38", "16641 12:08", "16641 12:41", "16641 13:11", "16641 13:41", "16641 14:16", "16641 14:46",
                "16601 10:42", "16601 11:08", "16601 11:38", "16601 12:08", "16601 12:41", "16601 13:11", "16601 13:41", "16601 14:16", "16601 14:46",
                "16603 10:42", "16603 11:08", "16603 11:38", "16603 12:08", "16603 12:41", "16603 13:11", "16603 13:41", "16603 14:16", "16603 14:46",
                "16604 10:43", "16604 11:09", "16604 11:39", "16604 12:09", "16604 12:42", "16604 13:12", "16604 13:42", "16604 14:17", "16604 14:47",
                "16615 10:43", "16615 11:09", "16615 11:39", "16615 12:09", "16615 12:42", "16615 13:12", "16615 13:42", "16615 14:17", "16615 14:47",
                "16616 10:45", "16616 11:11", "16616 11:41", "16616 12:11", "16616 12:44", "16616 13:14", "16616 13:44", "16616 14:19", "16616 14:49",
                "16617 10:47", "16617 11:13", "16617 11:43", "16617 12:11", "16617 12:44", "16617 13:14", "16617 13:44", "16617 14:19", "16617 14:49",
                "16626 10:48", "16626 11:14", "16626 11:44", "16626 12:11", "16626 12:44", "16626 13:14", "16626 13:44", "16626 14:19", "16626 14:49",
                "16621 10:49", "16621 11:15", "16621 11:45", "16621 12:12", "16621 12:45", "16621 13:15", "16621 13:45", "16621 14:20", "16621 14:50",
                "16498 14:55", "16498 15:25", "16498 15:55", "16498 16:25", "16498 16:55", "16498 17:25", "16498 18:05", "16498 18:35", "16498 19:20",
                "16503 15:01", "16503 15:28", "16503 15:58", "16503 16:28", "16503 16:58", "16503 17:28", "16503 18:08", "16503 18:38", "16503 19:23",
                "16507 15:01", "16507 15:28", "16507 15:58", "16507 16:28", "16507 16:58", "16507 17:28", "16507 18:08", "16507 18:38", "16507 19:23",
                "16512 15:10", "16512 15:37", "16512 16:07", "16512 16:37", "16512 17:10", "16512 17:37", "16512 18:25", "16512 18:47", "16512 19:32",
                "16517 15:11", "16517 15:38", "16517 16:08", "16517 16:38", "16517 17:11", "16517 17:38", "16517 18:26", "16517 18:48", "16517 19:33",
                "16131 15:12", "16131 15:39", "16131 16:09", "16131 16:39", "16131 17:12", "16131 17:39", "16131 18:27", "16131 18:49", "16131 19:34",
                "16540 15:13", "16540 15:40", "16540 16:10", "16540 16:40", "16540 17:13", "16540 17:40", "16540 18:28", "16540 18:50", "16540 19:35",
                "16545 15:14", "16545 15:41", "16545 16:11", "16545 16:41", "16545 17:14", "16545 17:41", "16545 18:29", "16545 18:51", "16545 19:36",
                "16592 15:14", "16592 15:41", "16592 16:11", "16592 16:41", "16592 17:14", "16592 17:41", "16592 18:29", "16592 18:51", "16592 19:36",
                "16595 15:14", "16595 15:41", "16595 16:11", "16595 16:41", "16595 17:14", "16595 17:41", "16595 18:29", "16595 18:51", "16595 19:36",
                "16641 15:19", "16641 15:46", "16641 16:16", "16641 16:46", "16641 17:19", "16641 17:46", "16641 18:34", "16641 18:56", "16641 19:41",
                "16601 15:19", "16601 15:46", "16601 16:16", "16601 16:46", "16601 17:19", "16601 17:46", "16601 18:34", "16601 18:56", "16601 19:41",
                "16603 15:19", "16603 15:46", "16603 16:16", "16603 16:46", "16603 17:19", "16603 17:46", "16603 18:34", "16603 18:56", "16603 19:41",
                "16604 15:20", "16604 15:47", "16604 16:17", "16604 16:47", "16604 17:20", "16604 17:47", "16604 18:35", "16604 18:57", "16604 19:42",
                "16615 15:20", "16615 15:47", "16615 16:17", "16615 16:47", "16615 17:20", "16615 17:47", "16615 18:35", "16615 18:57", "16615 19:42",
                "16616 15:22", "16616 15:49", "16616 16:19", "16616 16:49", "16616 17:22", "16616 17:49", "16616 18:37", "16616 18:59", "16616 19:44",
                "16617 15:22", "16617 15:49", "16617 16:19", "16617 16:49", "16617 17:22", "16617 17:49", "16617 18:37", "16617 18:59", "16617 19:44",
                "16626 15:22", "16626 15:49", "16626 16:19", "16626 16:49", "16626 17:22", "16626 17:49", "16626 18:37", "16626 18:59", "16626 19:44",
                "16621 15:23", "16621 15:50", "16621 16:20", "16621 16:50", "16621 17:23", "16621 17:50", "16621 18:38", "16621 19:00", "16621 19:45",
                "16498 19:50", "16498 20:40", "16498 21:10", "16498 21:40", "16498 23:10",
                "16503 19:53", "16503 20:43", "16503 21:13", "16503 21:43", "16503 23:13",
                "16507 19:53", "16507 20:43", "16507 21:13", "16507 21:43", "16507 23:13",
                "16512 19:59", "16512 20:49", "16512 21:19", "16512 21:49", "16512 23:19",
                "16517 20:00", "16517 20:50", "16517 21:20", "16517 21:50", "16517 23:20",
                "16131 20:01", "16131 20:51", "16131 21:21", "16131 21:51", "16131 23:21",
                "16540 20:02", "16540 20:52", "16540 21:22", "16540 21:52", "16540 23:22",
                "16545 20:03", "16545 20:53", "16545 21:23", "16545 21:53", "16545 23:23",
                "16592 20:03", "16592 20:53", "16592 21:23", "16592 21:53", "16592 23:23",
                "16595 20:03", "16595 20:53", "16595 21:23", "16595 21:53", "16595 23:23",
                "16641 20:08", "16641 20:58", "16641 21:28", "16641 21:58", "16641 23:28",
                "16601 20:08", "16601 20:58", "16601 21:28", "16601 21:58", "16601 23:28",
                "16603 20:08", "16603 20:58", "16603 21:28", "16603 21:58", "16603 23:28",
                "16604 20:09", "16604 20:59", "16604 21:29", "16604 21:59", "16604 23:29",
                "16615 20:09", "16615 20:59", "16615 21:29", "16615 21:59", "16615 23:29",
                "16616 20:11", "16616 21:01", "16616 21:31", "16616 22:01", "16616 23:31",
                "16617 20:11", "16617 21:01", "16617 21:31", "16617 22:01", "16617 23:31",
                "16626 20:11", "16626 21:01", "16626 21:31", "16626 22:01", "16626 23:31",
                "16621 20:12", "16621 21:02", "16621 21:32", "16621 22:02", "16621 23:32"
        };

        for(String entry : timetableRawData) {
            String[] parts = entry.split(" ");
            int stationNo = Integer.parseInt(parts[0]);
            LocalTime time = LocalTime.parse(parts[1], formatter);

            // 데이터가 평일/주말 구분 없으므로 평일(WEEKDAY)로 가정
            busTimetables.add(new BusTimetable(routeDown, savedStops.get(stationNo), time, BusTimetable.DayType.WEEKDAY));
        }

        busTimetableRepository.saveAll(busTimetables);
    }
}